version: "2"
services:
  varnish:
    image: meanbee/magento2-varnish:latest
    environment:
      - VIRTUAL_HOST=magento2.docker
      - VIRTUAL_PORT=80
      - HTTPS_METHOD=noredirect
    ports:
      - 80
    links:
      - web
    networks:
      - internal

  web:
    image: meanbee/magento2-nginx:1.9
    ports:
      - 80
    links:
      - fpm
      - db
    volumes_from:
      - appdata
    env_file:
      - ./global.env
    labels:
      - traefik.http.routers.web.rule=Host(`magento231.localhost`)
      - traefik.http.services.web.loadbalancer.server.port=80
      - traefik.docker.network=proxy
    networks:
      - proxy
      - internal
    #environment:
      #- VIRTUAL_HOST=magento2.docker
      #- VIRTUAL_PORT=80
      #- HTTPS_METHOD=noredirect
  
  fpm:
    hostname: fpm.magento2.docker
    image: meanbee/magento2-php:7.2-fpm
    ports:
      - 9000
    links:
      - db
    volumes_from:
      - appdata
    env_file:
      - ./global.env
    networks:
      - internal

  db:
    image: mariadb:10.2
    ports:
      - 3306
    volumes_from:
      - dbdata
    environment:
      - MYSQL_ROOT_PASSWORD=magento
      - MYSQL_DATABASE=magento
      - MYSQL_USER=magento
      - MYSQL_PASSWORD=magento
      - TERM=meh
    networks:
      - internal

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 80
    links:
      - db
    labels:
      - traefik.http.routers.phpmyadmin.rule=Host(`db.magento231.localhost`)
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80
      - traefik.docker.network=proxy
    networks:
      - proxy
      - internal

  cli:
    hostname: cli.magento2.docker
    image: meanbee/magento2-php:7.2-cli
    links:
      - db
    volumes:
      - ~/.composer/cache:/root/.composer/cache
    command: ["chmod", "+x", "/usr/local/bin/magento-installer"]
    volumes_from:
      - appdata
    env_file:
      - ./global.env
      - ./composer.env
    environment:
      - M2SETUP_INSTALL_DB=true
      - M2SETUP_DB_HOST=db
      - M2SETUP_DB_NAME=magento
      - M2SETUP_DB_USER=magento
      - M2SETUP_DB_PASSWORD=magento
      - M2SETUP_BASE_URL=http://magento231.localhost/
      # - M2SETUP_SECURE_BASE_URL=https://magento2.docker/
      - M2SETUP_BACKEND_FRONTNAME=admin
      - M2SETUP_ADMIN_FIRSTNAME=Admin
      - M2SETUP_ADMIN_LASTNAME=User
      - M2SETUP_ADMIN_EMAIL=thuan.luuquang@gmail.com
      - M2SETUP_ADMIN_USER=admin
      - M2SETUP_ADMIN_PASSWORD=admin@123
      - M2SETUP_VERSION=2.3.*
      - M2SETUP_USE_SAMPLE_DATA=false
      - M2SETUP_SOURCE_INCLUDE_SAMPLE_DATA=false
      - M2SETUP_COMPOSER_INSTALL=false
    networks:
      - internal

  cron:
    image: meanbee/magento2-php:7.2-cli
    hostname: magento2-cron.docker
    command: run-cron
    env_file:
      - ./global.env    
    environment:
      - ENABLE_SENDMAIL=true
    volumes_from:
      - appdata
    links:
      - db
    env_file:
      - ./global.env 
    networks:
      - internal     

  appdata:
    image: tianon/true
    volumes:
      - ../../src/magento:/var/www/magento
    networks:
      - internal

  dbdata:
    image: tianon/true
    volumes:
      - ../../data/mysql:/var/lib/mysql
    networks:
      - internal

networks:
  proxy:
    external:
      name: proxy
  internal:
    driver: bridge